{"ast":null,"code":"var _jsxFileName = \"/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/UsersSearch/UsersSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useMemo, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { useLazyQuery } from \"@apollo/client\"; //Components\n\nimport SearchBar from \"./../../components/SearchBar/SearchBar\";\nimport Table from \"./../../components/Table/Table\"; //Graphql\n\nimport { searchQueryUsers } from \"../../graphql/query\"; //Types\n\nimport { AlignEnum } from \"../../components/Table/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserSearch = () => {\n  _s();\n\n  var _data$search2;\n\n  const [result, setResult] = useState();\n  const [resultDebounce, setResultDebounce] = useState();\n  const [getUsers, {\n    data,\n    loading\n  }] = useLazyQuery(searchQueryUsers);\n  useEffect(() => {\n    debounce(() => setResultDebounce(result), 500)();\n  }, [result]);\n  useEffect(() => {\n    var _data$search;\n\n    getUsers({\n      variables: {\n        query: resultDebounce,\n        type: \"USERS\",\n        after: data === null || data === void 0 ? void 0 : (_data$search = data.search) === null || _data$search === void 0 ? void 0 : _data$search.pageInfo.endCursor,\n        first: 2\n      }\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$search2 = data.search) === null || _data$search2 === void 0 ? void 0 : _data$search2.pageInfo.endCursor, getUsers, resultDebounce]);\n  const parsedData = useMemo(() => {\n    var _data$search3, _data$search3$nodes;\n\n    return (data === null || data === void 0 ? void 0 : (_data$search3 = data.search) === null || _data$search3 === void 0 ? void 0 : (_data$search3$nodes = _data$search3.nodes) === null || _data$search3$nodes === void 0 ? void 0 : _data$search3$nodes.map(node => {\n      return {\n        id: node.id,\n        data: [{\n          value: node.name,\n          align: AlignEnum.left\n        }, {\n          value: node.email,\n          align: AlignEnum.left\n        }, {\n          value: node.location,\n          align: AlignEnum.left\n        }, {\n          value: node.url,\n          align: AlignEnum.center\n        }] || []\n      };\n    })) || [];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onChangeSearch: setResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      header: [{\n        value: \"Name\",\n        align: AlignEnum.left\n      }, {\n        value: \"Email\",\n        align: AlignEnum.left\n      }, {\n        value: \"Location\",\n        align: AlignEnum.left\n      }, {\n        value: \"Url\",\n        align: AlignEnum.left\n      }],\n      data: parsedData,\n      isFetching: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserSearch, \"fDLm66oCtnEuwRdiA9k0NjTk9y8=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = UserSearch;\nexport default _c2 = /*#__PURE__*/memo(UserSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useEffect","debounce","useLazyQuery","SearchBar","Table","searchQueryUsers","AlignEnum","UserSearch","result","setResult","resultDebounce","setResultDebounce","getUsers","data","loading","variables","query","type","after","search","pageInfo","endCursor","first","parsedData","nodes","map","node","id","value","name","align","left","email","location","url","center"],"sources":["/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/UsersSearch/UsersSearch.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { useLazyQuery } from \"@apollo/client\";\n\n//Components\nimport SearchBar from \"./../../components/SearchBar/SearchBar\";\nimport Table from \"./../../components/Table/Table\";\n\n//Graphql\nimport {\n  SearchQueryUsersProps,\n  SearchQueryUsersNodeProps,\n  searchQueryUsers,\n} from \"../../graphql/query\";\n\n//Types\nimport { AlignEnum } from \"../../components/Table/types\";\n\nconst UserSearch = () => {\n  const [result, setResult] = useState<string>();\n  const [resultDebounce, setResultDebounce] = useState<string>();\n\n  const [getUsers, { data, loading }] =\n    useLazyQuery<SearchQueryUsersProps>(searchQueryUsers);\n\n  useEffect(() => {\n    debounce(() => setResultDebounce(result), 500)();\n  }, [result]);\n\n  useEffect(() => {\n    getUsers({\n      variables: {\n        query: resultDebounce,\n        type: \"USERS\",\n        after: data?.search?.pageInfo.endCursor,\n        first: 2,\n      },\n    });\n  }, [data?.search?.pageInfo.endCursor, getUsers, resultDebounce]);\n\n  const parsedData = useMemo(\n    () =>\n      data?.search?.nodes?.map((node: SearchQueryUsersNodeProps) => {\n        return {\n          id: node.id,\n          data:\n            [\n              {\n                value: node.name,\n                align: AlignEnum.left,\n              },\n              {\n                value: node.email,\n                align: AlignEnum.left,\n              },\n              {\n                value: node.location,\n                align: AlignEnum.left,\n              },\n              {\n                value: node.url,\n                align: AlignEnum.center,\n              },\n            ] || [],\n        };\n      }) || [],\n    [data]\n  );\n\n  return (\n    <>\n      <SearchBar onChangeSearch={setResult} />\n      <Table\n        header={[\n          {\n            value: \"Name\",\n            align: AlignEnum.left,\n          },\n          {\n            value: \"Email\",\n            align: AlignEnum.left,\n          },\n          {\n            value: \"Location\",\n            align: AlignEnum.left,\n          },\n          {\n            value: \"Url\",\n            align: AlignEnum.left,\n          },\n        ]}\n        data={parsedData}\n        isFetching={loading}\n      />\n    </>\n  );\n};\n\nexport default memo(UserSearch);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useMemo, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client'; //Graphql\n\nimport { searchQueryRepository } from '../../graphql/query'; //Components\n\nimport SearchBar from './../../components/SearchBar/SearchBar';\nimport Table from './../../components/Table/Table'; //Utils \n\nimport { debounce } from '../../utils/utils'; //Types\n\nimport { AlignEnum } from '../../components/Table/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepositoriesSearch = () => {\n  _s();\n\n  const [result, setResult] = useState();\n  const [resultDebounce, setResultDebounce] = useState();\n  const [getRepositories, {\n    data,\n    loading\n  }] = useLazyQuery(searchQueryRepository);\n  console.log(data, loading);\n  useEffect(() => {\n    debounce(() => {\n      console.log('paso');\n      setResultDebounce(result);\n    }, 500);\n  }, [result]);\n  useEffect(() => {\n    var _data$search;\n\n    getRepositories({\n      variables: {\n        query: result,\n        type: \"REPOSITORY\",\n        after: data === null || data === void 0 ? void 0 : (_data$search = data.search) === null || _data$search === void 0 ? void 0 : _data$search.pageInfo.endCursor,\n        first: 2\n      }\n    });\n  }, [resultDebounce]);\n  const parsedData = useMemo(() => {\n    var _data$search2, _data$search2$nodes;\n\n    return (data === null || data === void 0 ? void 0 : (_data$search2 = data.search) === null || _data$search2 === void 0 ? void 0 : (_data$search2$nodes = _data$search2.nodes) === null || _data$search2$nodes === void 0 ? void 0 : _data$search2$nodes.map(node => {\n      const updateDate = new Date(node.updatedAt);\n      const createdAt = new Date(node.createdAt);\n      return {\n        id: node.id,\n        data: [{\n          value: node.name,\n          align: AlignEnum.left\n        }, {\n          value: node.url,\n          align: AlignEnum.left\n        }, {\n          value: node.description,\n          align: AlignEnum.left\n        }, {\n          value: `${updateDate.getDate()}/${updateDate.getMonth()}/${updateDate.getFullYear()}`,\n          align: AlignEnum.center\n        }, {\n          value: `${createdAt.getDate()}/${createdAt.getMonth()}/${createdAt.getFullYear()}`,\n          align: AlignEnum.center\n        }] || []\n      };\n    })) || [];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onChangeSearch: setResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      header: [{\n        value: 'Name',\n        align: AlignEnum.left\n      }, {\n        value: 'Url',\n        align: AlignEnum.left\n      }, {\n        value: 'Description',\n        align: AlignEnum.left\n      }, {\n        value: 'Updated',\n        align: AlignEnum.left\n      }, {\n        value: 'Created',\n        align: AlignEnum.left\n      }],\n      data: parsedData,\n      isFetching: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RepositoriesSearch, \"YJ2iwDKU/eTn+cFsTic5re3mZFs=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = RepositoriesSearch;\nexport default _c2 = /*#__PURE__*/memo(RepositoriesSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RepositoriesSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useEffect","useLazyQuery","searchQueryRepository","SearchBar","Table","debounce","AlignEnum","RepositoriesSearch","result","setResult","resultDebounce","setResultDebounce","getRepositories","data","loading","console","log","variables","query","type","after","search","pageInfo","endCursor","first","parsedData","nodes","map","node","updateDate","Date","updatedAt","createdAt","id","value","name","align","left","url","description","getDate","getMonth","getFullYear","center"],"sources":["/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useEffect } from 'react';\n\nimport { useLazyQuery, useQuery } from '@apollo/client';\n\n//Graphql\nimport { SearchQueryRepositoryProps, SearchQueryRepositoryNodeProps, searchQueryRepository } from '../../graphql/query';\n\n//Components\nimport SearchBar from './../../components/SearchBar/SearchBar';\nimport Table from './../../components/Table/Table';\n\n//Utils \nimport { debounce } from '../../utils/utils';\n\n//Types\nimport { AlignEnum } from '../../components/Table/types';\n\nconst RepositoriesSearch = () => {\n  const [result, setResult] = useState<string>();\n  const [resultDebounce, setResultDebounce] = useState<string>();\n\n  const [getRepositories, { data, loading }] = useLazyQuery<SearchQueryRepositoryProps>(searchQueryRepository);\n  console.log(data, loading);\n\n  useEffect(() => {\n    debounce(() => {\n      console.log('paso');\n      setResultDebounce(result)\n    }, 500);\n  }, [result])\n\n  useEffect(() => {\n    getRepositories({\n      variables: {\n        query: result,\n        type: \"REPOSITORY\",\n        after: data?.search?.pageInfo.endCursor,\n        first: 2\n      }\n    })\n  }, [resultDebounce])\n\n  const parsedData = useMemo(() => data?.search?.nodes?.map(\n    (node: SearchQueryRepositoryNodeProps) => {\n      const updateDate = new Date(node.updatedAt);\n      const createdAt = new Date(node.createdAt);\n\n      return (\n        {\n          id: node.id,\n          data: [\n            {\n              value: node.name,\n              align: AlignEnum.left,\n            },\n            {\n              value: node.url,\n              align: AlignEnum.left,\n            },\n            {\n              value: node.description,\n              align: AlignEnum.left,\n            },\n            {\n              value: `${updateDate.getDate()}/${updateDate.getMonth()}/${updateDate.getFullYear()}`,\n              align: AlignEnum.center,\n            },\n            {\n              value: `${createdAt.getDate()}/${createdAt.getMonth()}/${createdAt.getFullYear()}`,\n              align: AlignEnum.center,\n            },\n          ] || []\n        }\n      )\n    }) || [], [data]);\n\n  return (\n    <>\n      <SearchBar onChangeSearch={setResult} />\n      <Table header={\n        [\n          {\n            value: 'Name',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Url',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Description',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Updated',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Created',\n            align: AlignEnum.left,\n          }\n        ]\n      }\n        data={parsedData}\n        isFetching={loading}\n      />\n    </>\n  )\n}\n\nexport default memo(RepositoriesSearch);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
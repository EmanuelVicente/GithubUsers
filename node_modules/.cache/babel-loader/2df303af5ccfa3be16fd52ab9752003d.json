{"ast":null,"code":"var _jsxFileName = \"/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useMemo, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client'; //Graphql\n\nimport { searchQueryRepository } from '../../graphql/query'; //Components\n\nimport SearchBar from './../../components/SearchBar/SearchBar';\nimport Table from './../../components/Table/Table'; //Types\n\nimport { AlignEnum } from '../../components/Table/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepositoriesSearch = () => {\n  _s();\n\n  var _data$search, _data$search$nodes;\n\n  const [result, setResult] = useState();\n  const [getRepositories, {\n    data,\n    loading\n  }] = useLazyQuery(searchQueryRepository);\n  data === null || data === void 0 ? void 0 : (_data$search = data.search) === null || _data$search === void 0 ? void 0 : (_data$search$nodes = _data$search.nodes) === null || _data$search$nodes === void 0 ? void 0 : _data$search$nodes.map(node => console.log(typeof node.updatedAt));\n  useEffect(() => {\n    var _data$search2;\n\n    getRepositories({\n      variables: {\n        query: result,\n        type: \"REPOSITORY\",\n        after: data === null || data === void 0 ? void 0 : (_data$search2 = data.search) === null || _data$search2 === void 0 ? void 0 : _data$search2.pageInfo.startCursor,\n        first: 2\n      }\n    });\n  }, [result]);\n  const parsedData = useMemo(() => {\n    var _data$search3, _data$search3$nodes;\n\n    return (data === null || data === void 0 ? void 0 : (_data$search3 = data.search) === null || _data$search3 === void 0 ? void 0 : (_data$search3$nodes = _data$search3.nodes) === null || _data$search3$nodes === void 0 ? void 0 : _data$search3$nodes.map(node => {\n      return {\n        id: node.id,\n        data: [{\n          value: node.name,\n          align: AlignEnum.left\n        }, {\n          value: node.url,\n          align: AlignEnum.left\n        }, {\n          value: node.description,\n          align: AlignEnum.left\n        }, {\n          value: `${node.updatedAt.getDate()}/${node.updatedAt.getMonth()}/${node.updatedAt.getFullYear()}`,\n          align: AlignEnum.center\n        }, {\n          value: `${node.createdAt.getDate()}/${node.createdAt.getMonth()}/${node.createdAt.getFullYear()}`,\n          align: AlignEnum.center\n        }] || []\n      };\n    })) || [];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onChangeSearch: setResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      header: [{\n        value: 'Name',\n        align: AlignEnum.left\n      }, {\n        value: 'Url',\n        align: AlignEnum.left\n      }, {\n        value: 'Description',\n        align: AlignEnum.left\n      }, {\n        value: 'Updated',\n        align: AlignEnum.left\n      }, {\n        value: 'Created',\n        align: AlignEnum.left\n      }],\n      data: parsedData,\n      isFetching: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RepositoriesSearch, \"QFBKZd9K3TZz/Kl8i2dqBctSjTY=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = RepositoriesSearch;\nexport default _c2 = /*#__PURE__*/memo(RepositoriesSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RepositoriesSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useEffect","useLazyQuery","searchQueryRepository","SearchBar","Table","AlignEnum","RepositoriesSearch","result","setResult","getRepositories","data","loading","search","nodes","map","node","console","log","updatedAt","variables","query","type","after","pageInfo","startCursor","first","parsedData","id","value","name","align","left","url","description","getDate","getMonth","getFullYear","center","createdAt"],"sources":["/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useEffect } from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\n\n//Graphql\nimport { SearchQueryRepositoryProps, SearchQueryRepositoryNodeProps, searchQueryRepository } from '../../graphql/query';\n\n//Components\nimport SearchBar from './../../components/SearchBar/SearchBar';\nimport Table from './../../components/Table/Table';\n\n//Types\nimport { AlignEnum } from '../../components/Table/types';\n\nconst RepositoriesSearch = () => {\n  const [result, setResult] = useState<string>();\n\n  const [getRepositories, { data, loading }] = useLazyQuery<SearchQueryRepositoryProps>(searchQueryRepository);\n  data?.search?.nodes?.map((node: SearchQueryRepositoryNodeProps) => console.log(typeof node.updatedAt));\n\n  useEffect(() => {\n    getRepositories({\n      variables: {\n        query: result,\n        type: \"REPOSITORY\",\n        after: data?.search?.pageInfo.startCursor,\n        first: 2\n      }\n    })\n  }, [result])\n\n  const parsedData = useMemo(() => data?.search?.nodes?.map(\n    (node: SearchQueryRepositoryNodeProps) => {\n      return (\n        {\n          id: node.id,\n          data: [\n            {\n              value: node.name,\n              align: AlignEnum.left,\n            },\n            {\n              value: node.url,\n              align: AlignEnum.left,\n            },\n            {\n              value: node.description,\n              align: AlignEnum.left,\n            },\n            {\n              value: `${node.updatedAt.getDate()}/${node.updatedAt.getMonth()}/${node.updatedAt.getFullYear()}`,\n              align: AlignEnum.center,\n            },\n            {\n              value: `${node.createdAt.getDate()}/${node.createdAt.getMonth()}/${node.createdAt.getFullYear()}`,\n              align: AlignEnum.center,\n            },\n          ] || []\n        }\n      )\n    }) || [], [data]);\n\n  return (\n    <>\n      <SearchBar onChangeSearch={setResult} />\n      <Table header={\n        [\n          {\n            value: 'Name',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Url',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Description',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Updated',\n            align: AlignEnum.left,\n          },\n          {\n            value: 'Created',\n            align: AlignEnum.left,\n          }\n        ]\n      }\n        data={parsedData}\n        isFetching={loading}\n      />\n    </>\n  )\n}\n\nexport default memo(RepositoriesSearch);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
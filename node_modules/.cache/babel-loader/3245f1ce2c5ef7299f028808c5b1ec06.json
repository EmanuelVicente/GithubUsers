{"ast":null,"code":"var _jsxFileName = \"/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useMemo, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { useLazyQuery } from \"@apollo/client\"; //Graphql\n\nimport { searchQueryRepository } from \"../../graphql/query\"; //Components\n\nimport SearchBar from \"./../../components/SearchBar/SearchBar\";\nimport Table from \"./../../components/Table/Table\"; //Types\n\nimport { AlignEnum } from \"../../components/Table/types\"; //Styles\n\nimport { TitleStyled, Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepositoriesSearch = () => {\n  _s();\n\n  var _paginatedData$search7, _paginatedData$search8, _paginatedData$search9, _paginatedData$search10;\n\n  const [result, setResult] = useState(\"\");\n  const [resultDebounce, setResultDebounce] = useState(\"\");\n  const [paginatedData, setPaginatedData] = useState({\n    search: {\n      nodes: []\n    }\n  });\n  const [getRepositories, {\n    data\n  }] = useLazyQuery(searchQueryRepository);\n  useEffect(() => {\n    var _data$search$pageInfo;\n\n    if (!data) {\n      return;\n    }\n\n    if (data && (_data$search$pageInfo = data.search.pageInfo) !== null && _data$search$pageInfo !== void 0 && _data$search$pageInfo.hasPreviousPage) {\n      var _paginatedData$search, _data$search;\n\n      setPaginatedData({\n        search: { ...(data === null || data === void 0 ? void 0 : data.search),\n          nodes: [...(((_paginatedData$search = paginatedData.search) === null || _paginatedData$search === void 0 ? void 0 : _paginatedData$search.nodes) || []), ...((data === null || data === void 0 ? void 0 : (_data$search = data.search) === null || _data$search === void 0 ? void 0 : _data$search.nodes) || []).filter(value => {\n            var _paginatedData$search2;\n\n            return !(((_paginatedData$search2 = paginatedData.search) === null || _paginatedData$search2 === void 0 ? void 0 : _paginatedData$search2.nodes) || []).some(valuePaginated => value.id === valuePaginated.id || !valuePaginated.id);\n          })]\n        }\n      });\n    } else {\n      setPaginatedData(data || {\n        search: {\n          nodes: []\n        }\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [data === null || data === void 0 ? void 0 : data.search]);\n  useEffect(() => {\n    debounce(() => setResultDebounce(result), 500)();\n  }, [result, resultDebounce]);\n  useEffect(() => {\n    getUsers({\n      variables: {\n        query: resultDebounce,\n        type: \"REPOSITORY\",\n        first: 20\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resultDebounce, getUsers]);\n  const parsedData = useMemo(() => {\n    var _paginatedData$search3, _paginatedData$search4;\n\n    return (paginatedData === null || paginatedData === void 0 ? void 0 : (_paginatedData$search3 = paginatedData.search) === null || _paginatedData$search3 === void 0 ? void 0 : (_paginatedData$search4 = _paginatedData$search3.nodes) === null || _paginatedData$search4 === void 0 ? void 0 : _paginatedData$search4.map(node => {\n      const updateDate = new Date(node.updatedAt);\n      const createdAt = new Date(node.createdAt);\n      return {\n        id: node.id,\n        data: [{\n          value: node.name,\n          align: AlignEnum.left\n        }, {\n          value: node.url,\n          align: AlignEnum.left\n        }, {\n          value: node.description,\n          align: AlignEnum.left\n        }, {\n          value: `${updateDate.getDate()}/${updateDate.getMonth()}/${updateDate.getFullYear()}`,\n          align: AlignEnum.center\n        }, {\n          value: `${createdAt.getDate()}/${createdAt.getMonth()}/${createdAt.getFullYear()}`,\n          align: AlignEnum.center\n        }] || []\n      };\n    })) || [];\n  }, [data]);\n  const fetchUsers = useCallback(() => {\n    var _paginatedData$search5, _paginatedData$search6;\n\n    getUsers({\n      variables: {\n        query: resultDebounce,\n        type: \"REPOSITORY\",\n        after: paginatedData === null || paginatedData === void 0 ? void 0 : (_paginatedData$search5 = paginatedData.search) === null || _paginatedData$search5 === void 0 ? void 0 : (_paginatedData$search6 = _paginatedData$search5.pageInfo) === null || _paginatedData$search6 === void 0 ? void 0 : _paginatedData$search6.endCursor,\n        first: 20\n      }\n    });\n  }, [getUsers, paginatedData === null || paginatedData === void 0 ? void 0 : (_paginatedData$search7 = paginatedData.search) === null || _paginatedData$search7 === void 0 ? void 0 : (_paginatedData$search8 = _paginatedData$search7.pageInfo) === null || _paginatedData$search8 === void 0 ? void 0 : _paginatedData$search8.endCursor, resultDebounce]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onChangeSearch: setResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(TitleStyled, {\n        text: \"Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        header: [{\n          value: \"Name\",\n          align: AlignEnum.left\n        }, {\n          value: \"Url\",\n          align: AlignEnum.left\n        }, {\n          value: \"Description\",\n          align: AlignEnum.left\n        }, {\n          value: \"Updated\",\n          align: AlignEnum.left\n        }, {\n          value: \"Created\",\n          align: AlignEnum.left\n        }],\n        data: parsedData,\n        nextPage: fetchUsers,\n        hasMore: (paginatedData === null || paginatedData === void 0 ? void 0 : (_paginatedData$search9 = paginatedData.search) === null || _paginatedData$search9 === void 0 ? void 0 : (_paginatedData$search10 = _paginatedData$search9.pageInfo) === null || _paginatedData$search10 === void 0 ? void 0 : _paginatedData$search10.hasNextPage) || false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RepositoriesSearch, \"hxjEiSSAe04fovY+RNWE4OGBU9w=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = RepositoriesSearch;\nexport default _c2 = /*#__PURE__*/memo(RepositoriesSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RepositoriesSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useEffect","debounce","useLazyQuery","searchQueryRepository","SearchBar","Table","AlignEnum","TitleStyled","Container","RepositoriesSearch","result","setResult","resultDebounce","setResultDebounce","paginatedData","setPaginatedData","search","nodes","getRepositories","data","pageInfo","hasPreviousPage","filter","value","some","valuePaginated","id","getUsers","variables","query","type","first","parsedData","map","node","updateDate","Date","updatedAt","createdAt","name","align","left","url","description","getDate","getMonth","getFullYear","center","fetchUsers","useCallback","after","endCursor","hasNextPage"],"sources":["/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { useLazyQuery } from \"@apollo/client\";\n\n//Graphql\nimport {\n  SearchQueryRepositoryProps,\n  SearchQueryRepositoryNodeProps,\n  searchQueryRepository,\n} from \"../../graphql/query\";\n\n//Components\nimport SearchBar from \"./../../components/SearchBar/SearchBar\";\nimport Table from \"./../../components/Table/Table\";\n\n//Types\nimport { AlignEnum } from \"../../components/Table/types\";\n\n//Styles\nimport { TitleStyled, Container } from \"./styles\";\n\nconst RepositoriesSearch = () => {\n  const [result, setResult] = useState<string>(\"\");\n  const [resultDebounce, setResultDebounce] = useState<string>(\"\");\n  const [paginatedData, setPaginatedData] =\n    useState<SearchQueryRepositoryProps>({\n      search: { nodes: [] },\n    });\n\n  const [getRepositories, { data }] = useLazyQuery<SearchQueryRepositoryProps>(\n    searchQueryRepository\n  );\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    if (data && data.search.pageInfo?.hasPreviousPage) {\n      setPaginatedData({\n        search: {\n          ...data?.search,\n          nodes: [\n            ...(paginatedData.search?.nodes || []),\n            ...(data?.search?.nodes || []).filter(\n              (value) =>\n                !(paginatedData.search?.nodes || []).some(\n                  (valuePaginated) =>\n                    value.id === valuePaginated.id || !valuePaginated.id\n                )\n            ),\n          ],\n        },\n      });\n    } else {\n      setPaginatedData(\n        data || {\n          search: { nodes: [] },\n        }\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.search]);\n\n  useEffect(() => {\n    debounce(() => setResultDebounce(result), 500)();\n  }, [result, resultDebounce]);\n\n  useEffect(() => {\n    getUsers({\n      variables: {\n        query: resultDebounce,\n        type: \"REPOSITORY\",\n        first: 20,\n      },\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resultDebounce, getUsers]);\n\n  const parsedData = useMemo(\n    () =>\n      paginatedData?.search?.nodes?.map(\n        (node: SearchQueryRepositoryNodeProps) => {\n          const updateDate = new Date(node.updatedAt);\n          const createdAt = new Date(node.createdAt);\n\n          return {\n            id: node.id,\n            data:\n              [\n                {\n                  value: node.name,\n                  align: AlignEnum.left,\n                },\n                {\n                  value: node.url,\n                  align: AlignEnum.left,\n                },\n                {\n                  value: node.description,\n                  align: AlignEnum.left,\n                },\n                {\n                  value: `${updateDate.getDate()}/${updateDate.getMonth()}/${updateDate.getFullYear()}`,\n                  align: AlignEnum.center,\n                },\n                {\n                  value: `${createdAt.getDate()}/${createdAt.getMonth()}/${createdAt.getFullYear()}`,\n                  align: AlignEnum.center,\n                },\n              ] || [],\n          };\n        }\n      ) || [],\n    [data]\n  );\n\n  const fetchUsers = useCallback(() => {\n    getUsers({\n      variables: {\n        query: resultDebounce,\n        type: \"REPOSITORY\",\n        after: paginatedData?.search?.pageInfo?.endCursor,\n        first: 20,\n      },\n    });\n  }, [getUsers, paginatedData?.search?.pageInfo?.endCursor, resultDebounce]);\n\n  return (\n    <>\n      <SearchBar onChangeSearch={setResult} />\n      <Container>\n        <TitleStyled text=\"Repositories\" />\n        <Table\n          header={[\n            {\n              value: \"Name\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Url\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Description\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Updated\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Created\",\n              align: AlignEnum.left,\n            },\n          ]}\n          data={parsedData}\n          nextPage={fetchUsers}\n          hasMore={paginatedData?.search?.pageInfo?.hasNextPage || false}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default memo(RepositoriesSearch);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,OAAhC,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;AACA,SAGEC,qBAHF,QAIO,qBAJP,C,CAMA;;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,UAAvC;;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAAA;;EAC/B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAS,EAAT,CAApC;EACA,MAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAS,EAAT,CAApD;EACA,MAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IACJjB,QAAQ,CAA6B;IACnCkB,MAAM,EAAE;MAAEC,KAAK,EAAE;IAAT;EAD2B,CAA7B,CADV;EAKA,MAAM,CAACC,eAAD,EAAkB;IAAEC;EAAF,CAAlB,IAA8BjB,YAAY,CAC9CC,qBAD8C,CAAhD;EAIAH,SAAS,CAAC,MAAM;IAAA;;IACd,IAAI,CAACmB,IAAL,EAAW;MACT;IACD;;IACD,IAAIA,IAAI,6BAAIA,IAAI,CAACH,MAAL,CAAYI,QAAhB,kDAAI,sBAAsBC,eAAlC,EAAmD;MAAA;;MACjDN,gBAAgB,CAAC;QACfC,MAAM,EAAE,EACN,IAAGG,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEH,MAAT,CADM;UAENC,KAAK,EAAE,CACL,IAAI,0BAAAH,aAAa,CAACE,MAAd,gFAAsBC,KAAtB,KAA+B,EAAnC,CADK,EAEL,GAAG,CAAC,CAAAE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEH,MAAN,8DAAcC,KAAd,KAAuB,EAAxB,EAA4BK,MAA5B,CACAC,KAAD;YAAA;;YAAA,OACE,CAAC,CAAC,2BAAAT,aAAa,CAACE,MAAd,kFAAsBC,KAAtB,KAA+B,EAAhC,EAAoCO,IAApC,CACEC,cAAD,IACEF,KAAK,CAACG,EAAN,KAAaD,cAAc,CAACC,EAA5B,IAAkC,CAACD,cAAc,CAACC,EAFrD,CADH;UAAA,CADC,CAFE;QAFD;MADO,CAAD,CAAhB;IAeD,CAhBD,MAgBO;MACLX,gBAAgB,CACdI,IAAI,IAAI;QACNH,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAT;MADF,CADM,CAAhB;IAKD,CA1Ba,CA2Bd;;EACD,CA5BQ,EA4BN,CAACE,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEH,MAAP,CA5BM,CAAT;EA8BAhB,SAAS,CAAC,MAAM;IACdC,QAAQ,CAAC,MAAMY,iBAAiB,CAACH,MAAD,CAAxB,EAAkC,GAAlC,CAAR;EACD,CAFQ,EAEN,CAACA,MAAD,EAASE,cAAT,CAFM,CAAT;EAIAZ,SAAS,CAAC,MAAM;IACd2B,QAAQ,CAAC;MACPC,SAAS,EAAE;QACTC,KAAK,EAAEjB,cADE;QAETkB,IAAI,EAAE,YAFG;QAGTC,KAAK,EAAE;MAHE;IADJ,CAAD,CAAR,CADc,CAQd;EACD,CATQ,EASN,CAACnB,cAAD,EAAiBe,QAAjB,CATM,CAAT;EAWA,MAAMK,UAAU,GAAGjC,OAAO,CACxB;IAAA;;IAAA,OACE,CAAAe,aAAa,SAAb,IAAAA,aAAa,WAAb,sCAAAA,aAAa,CAAEE,MAAf,4GAAuBC,KAAvB,kFAA8BgB,GAA9B,CACGC,IAAD,IAA0C;MACxC,MAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,SAAd,CAAnB;MACA,MAAMC,SAAS,GAAG,IAAIF,IAAJ,CAASF,IAAI,CAACI,SAAd,CAAlB;MAEA,OAAO;QACLZ,EAAE,EAAEQ,IAAI,CAACR,EADJ;QAELP,IAAI,EACF,CACE;UACEI,KAAK,EAAEW,IAAI,CAACK,IADd;UAEEC,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CADF,EAKE;UACElB,KAAK,EAAEW,IAAI,CAACQ,GADd;UAEEF,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CALF,EASE;UACElB,KAAK,EAAEW,IAAI,CAACS,WADd;UAEEH,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CATF,EAaE;UACElB,KAAK,EAAG,GAAEY,UAAU,CAACS,OAAX,EAAqB,IAAGT,UAAU,CAACU,QAAX,EAAsB,IAAGV,UAAU,CAACW,WAAX,EAAyB,EADtF;UAEEN,KAAK,EAAElC,SAAS,CAACyC;QAFnB,CAbF,EAiBE;UACExB,KAAK,EAAG,GAAEe,SAAS,CAACM,OAAV,EAAoB,IAAGN,SAAS,CAACO,QAAV,EAAqB,IAAGP,SAAS,CAACQ,WAAV,EAAwB,EADnF;UAEEN,KAAK,EAAElC,SAAS,CAACyC;QAFnB,CAjBF,KAqBK;MAxBF,CAAP;IA0BD,CA/BH,MAgCK,EAjCP;EAAA,CADwB,EAmCxB,CAAC5B,IAAD,CAnCwB,CAA1B;EAsCA,MAAM6B,UAAU,GAAGC,WAAW,CAAC,MAAM;IAAA;;IACnCtB,QAAQ,CAAC;MACPC,SAAS,EAAE;QACTC,KAAK,EAAEjB,cADE;QAETkB,IAAI,EAAE,YAFG;QAGToB,KAAK,EAAEpC,aAAF,aAAEA,aAAF,iDAAEA,aAAa,CAAEE,MAAjB,qFAAE,uBAAuBI,QAAzB,2DAAE,uBAAiC+B,SAH/B;QAITpB,KAAK,EAAE;MAJE;IADJ,CAAD,CAAR;EAQD,CAT6B,EAS3B,CAACJ,QAAD,EAAWb,aAAX,aAAWA,aAAX,iDAAWA,aAAa,CAAEE,MAA1B,qFAAW,uBAAuBI,QAAlC,2DAAW,uBAAiC+B,SAA5C,EAAuDvC,cAAvD,CAT2B,CAA9B;EAWA,oBACE;IAAA,wBACE,QAAC,SAAD;MAAW,cAAc,EAAED;IAA3B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA,wBACE,QAAC,WAAD;QAAa,IAAI,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,MAAM,EAAE,CACN;UACEY,KAAK,EAAE,MADT;UAEEiB,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CADM,EAKN;UACElB,KAAK,EAAE,KADT;UAEEiB,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CALM,EASN;UACElB,KAAK,EAAE,aADT;UAEEiB,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CATM,EAaN;UACElB,KAAK,EAAE,SADT;UAEEiB,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CAbM,EAiBN;UACElB,KAAK,EAAE,SADT;UAEEiB,KAAK,EAAElC,SAAS,CAACmC;QAFnB,CAjBM,CADV;QAuBE,IAAI,EAAET,UAvBR;QAwBE,QAAQ,EAAEgB,UAxBZ;QAyBE,OAAO,EAAE,CAAAlC,aAAa,SAAb,IAAAA,aAAa,WAAb,sCAAAA,aAAa,CAAEE,MAAf,6GAAuBI,QAAvB,oFAAiCgC,WAAjC,KAAgD;MAzB3D;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAmCD,CA7ID;;GAAM3C,kB;UAQgCP,Y;;;KARhCO,kB;AA+IN,kCAAeZ,IAAI,CAACY,kBAAD,CAAnB"},"metadata":{},"sourceType":"module"}
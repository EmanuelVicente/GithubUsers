{"ast":null,"code":"var _jsxFileName = \"/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/UsersSearch/UsersSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport SearchBar from './../../components/SearchBar/SearchBar';\nimport Table from './../../components/Table/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EXCHANGE_RATES = gql`\nquery ($search_term: String!) {\n\tsearch(query: $search_term, type: REPOSITORY, first: 20) {\n\t\trepositoryCount\n\t\tedges {\n\t\t\tnode {\n\t\t\t\t... on Repository {\n\t\t\t\t\tname\n\t\t\t\t\towner {\n\t\t\t\t\t\tlogin\n\t\t\t\t\t}\n\t\t\t\t\tstargazers {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t\tdescriptionHTML\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nconst UserSearch = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(EXCHANGE_RATES);\n  console.log(loading, error, data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserSearch, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = UserSearch;\nexport default _c2 = /*#__PURE__*/memo(UserSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useQuery","gql","SearchBar","Table","EXCHANGE_RATES","UserSearch","loading","error","data","console","log"],"sources":["/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/UsersSearch/UsersSearch.tsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nimport SearchBar from './../../components/SearchBar/SearchBar';\nimport Table from './../../components/Table/Table';\n\nconst EXCHANGE_RATES = gql`\nquery ($search_term: String!) {\n\tsearch(query: $search_term, type: REPOSITORY, first: 20) {\n\t\trepositoryCount\n\t\tedges {\n\t\t\tnode {\n\t\t\t\t... on Repository {\n\t\t\t\t\tname\n\t\t\t\t\towner {\n\t\t\t\t\t\tlogin\n\t\t\t\t\t}\n\t\t\t\t\tstargazers {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t\tdescriptionHTML\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nconst UserSearch = () => {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\n  console.log(loading, error, data);\n  return (\n    <>\n      <SearchBar />\n      <Table />\n    </>\n  )\n}\n\nexport default memo(UserSearch);\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;;;AAEA,MAAMC,cAAc,GAAGH,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;;AAsBA,MAAMI,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BR,QAAQ,CAACI,cAAD,CAAzC;EACAK,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;EACA,oBACE;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CATD;;GAAMH,U;UAC6BL,Q;;;KAD7BK,U;AAWN,kCAAeN,IAAI,CAACM,UAAD,CAAnB"},"metadata":{},"sourceType":"module"}
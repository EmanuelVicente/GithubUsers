{"ast":null,"code":"var _jsxFileName = \"/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useMemo, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { useLazyQuery } from \"@apollo/client\"; //Graphql\n\nimport { searchQueryRepository } from \"../../graphql/query\"; //Components\n\nimport SearchBar from \"./../../components/SearchBar/SearchBar\";\n//Types\nimport { AlignEnum } from \"../../components/Table/types\"; //Styles\n\nimport { TitleStyled, Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RepositoriesSearch = () => {\n  _s();\n\n  const [result, setResult] = useState();\n  const [resultDebounce, setResultDebounce] = useState();\n  const [getRepositories, {\n    data,\n    loading\n  }] = useLazyQuery(searchQueryRepository);\n  console.log(data, loading);\n  useEffect(() => {\n    debounce(() => setResultDebounce(result), 500)();\n  }, [result]);\n  useEffect(() => {\n    var _data$search;\n\n    getRepositories({\n      variables: {\n        query: resultDebounce,\n        type: \"REPOSITORY\",\n        after: data === null || data === void 0 ? void 0 : (_data$search = data.search) === null || _data$search === void 0 ? void 0 : _data$search.pageInfo.endCursor,\n        first: 2\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getRepositories, resultDebounce]);\n  const parsedData = useMemo(() => {\n    var _data$search2, _data$search2$nodes;\n\n    return (data === null || data === void 0 ? void 0 : (_data$search2 = data.search) === null || _data$search2 === void 0 ? void 0 : (_data$search2$nodes = _data$search2.nodes) === null || _data$search2$nodes === void 0 ? void 0 : _data$search2$nodes.map(node => {\n      const updateDate = new Date(node.updatedAt);\n      const createdAt = new Date(node.createdAt);\n      return {\n        id: node.id,\n        data: [{\n          value: node.name,\n          align: AlignEnum.left\n        }, {\n          value: node.url,\n          align: AlignEnum.left\n        }, {\n          value: node.description,\n          align: AlignEnum.left\n        }, {\n          value: `${updateDate.getDate()}/${updateDate.getMonth()}/${updateDate.getFullYear()}`,\n          align: AlignEnum.center\n        }, {\n          value: `${createdAt.getDate()}/${createdAt.getMonth()}/${createdAt.getFullYear()}`,\n          align: AlignEnum.center\n        }] || []\n      };\n    })) || [];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onChangeSearch: setResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(TitleStyled, {\n        text: \"Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RepositoriesSearch, \"YJ2iwDKU/eTn+cFsTic5re3mZFs=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = RepositoriesSearch;\nexport default _c2 = /*#__PURE__*/memo(RepositoriesSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RepositoriesSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useEffect","debounce","useLazyQuery","searchQueryRepository","SearchBar","AlignEnum","TitleStyled","Container","RepositoriesSearch","result","setResult","resultDebounce","setResultDebounce","getRepositories","data","loading","console","log","variables","query","type","after","search","pageInfo","endCursor","first","parsedData","nodes","map","node","updateDate","Date","updatedAt","createdAt","id","value","name","align","left","url","description","getDate","getMonth","getFullYear","center"],"sources":["/Users/xoor/Desktop/a/exersice/github_users/GithubUsers/src/screens/RepositoriesSearch/RepositoriesSearch.tsx"],"sourcesContent":["import React, { memo, useState, useMemo, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { useLazyQuery } from \"@apollo/client\";\n\n//Graphql\nimport {\n  SearchQueryRepositoryProps,\n  SearchQueryRepositoryNodeProps,\n  searchQueryRepository,\n} from \"../../graphql/query\";\n\n//Components\nimport SearchBar from \"./../../components/SearchBar/SearchBar\";\nimport Table from \"./../../components/Table/Table\";\n\n//Types\nimport { AlignEnum } from \"../../components/Table/types\";\n\n//Styles\nimport { TitleStyled, Container } from \"./styles\";\n\nconst RepositoriesSearch = () => {\n  const [result, setResult] = useState<string>();\n  const [resultDebounce, setResultDebounce] = useState<string>();\n\n  const [getRepositories, { data, loading }] =\n    useLazyQuery<SearchQueryRepositoryProps>(searchQueryRepository);\n  console.log(data, loading);\n\n  useEffect(() => {\n    debounce(() => setResultDebounce(result), 500)();\n  }, [result]);\n\n  useEffect(() => {\n    getRepositories({\n      variables: {\n        query: resultDebounce,\n        type: \"REPOSITORY\",\n        after: data?.search?.pageInfo.endCursor,\n        first: 2,\n      },\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getRepositories, resultDebounce]);\n\n  const parsedData = useMemo(\n    () =>\n      data?.search?.nodes?.map((node: SearchQueryRepositoryNodeProps) => {\n        const updateDate = new Date(node.updatedAt);\n        const createdAt = new Date(node.createdAt);\n\n        return {\n          id: node.id,\n          data:\n            [\n              {\n                value: node.name,\n                align: AlignEnum.left,\n              },\n              {\n                value: node.url,\n                align: AlignEnum.left,\n              },\n              {\n                value: node.description,\n                align: AlignEnum.left,\n              },\n              {\n                value: `${updateDate.getDate()}/${updateDate.getMonth()}/${updateDate.getFullYear()}`,\n                align: AlignEnum.center,\n              },\n              {\n                value: `${createdAt.getDate()}/${createdAt.getMonth()}/${createdAt.getFullYear()}`,\n                align: AlignEnum.center,\n              },\n            ] || [],\n        };\n      }) || [],\n    [data]\n  );\n\n  return (\n    <>\n      <SearchBar onChangeSearch={setResult} />\n      <Container>\n        <TitleStyled text=\"Repositories\" />\n        {/* <Table\n          header={[\n            {\n              value: \"Name\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Url\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Description\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Updated\",\n              align: AlignEnum.left,\n            },\n            {\n              value: \"Created\",\n              align: AlignEnum.left,\n            },\n          ]}\n          data={parsedData}\n          isFetching={loading}\n        /> */}\n      </Container>\n    </>\n  );\n};\n\nexport default memo(RepositoriesSearch);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}